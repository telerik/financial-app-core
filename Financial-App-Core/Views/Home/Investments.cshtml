@using static Financial_App_Core.Seeders.FinancialSeeder;

@{
    ViewData["Title"] = "Investments";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

@Html.Partial("_DrawerHeader")

@{
    var movers = SeedMovers(Url);
}

<h1 class="k-px-md-15 k-p-5 k-m-0">Investments</h1>

<div class="k-d-grid k-grid-cols-1 k-grid-cols-md-12 k-gap-5 k-p-md-5 k-px-md-15 k-p-5">
    <div class="k-col-span-12 k-col-span-md-5">
        <div class="listview-card k-p-4">
            <h4>Total Investments</h4>
            <span>Placeholder</span>
            @(Html.Kendo().Chart()
                    .Name("chart")
                    .ChartArea(chart => chart.Background("transparent"))
                    .Series(series =>
                    {
                        series.Pie(new dynamic[] {
                         new { category = "Stocks", value = 60, color = "#9C27B0", explode = false },
                         new { category = "Real Estates", value = 60, color = "#1D84D6", explode = false },
                         new { category = "Bonds", value = 60, color = "#008478", explode = true }, 
                         new { category = "Mutual Funds", value = 60, color = "#E0CF34", explode = false },
                         new { category = "Cryptocurrency", value = 60, color = "#F44336", explode = false },
                         new { category = "Commodities", value = 60, color = "#439A46", explode = false }
                        })
                        .ExplodeField("explode") 
                        .Highlight(h => h.Visible(true).Border(b => b.Width(0)).Color("rgba(255,255,255,0.2)").Opacity(1))
                        .Labels(labels => labels.Visible(true).Position(ChartPieLabelsPosition.Center).Color("white").Background("transparent").Format("{0}"));
                    })
                    .Tooltip(tooltip => tooltip.Visible(true).Format("{0}%"))
                    .Legend(l => l.Visible(true)
                        .Orientation(ChartLegendOrientation.Vertical)
                        .Position(ChartLegendPosition.Right)
                        .Item(i => i.Markers(m => m.Type(ChartMarkerShape.Triangle)))
                    )
                )
        </div>
    </div>

    <div class="k-col-span-12 k-col-span-md-7 listview-card k-p-4">
        <h4>Today's Top @movers.Count() Movers</h4>

        @foreach (var mover in movers)
        {
            await Html.RenderPartialAsync("_MoverItemPartial", mover);
        }

    </div>

    <div class="k-col-span-12 k-col-span-md-12">
        <div class="listview-card k-p-4">

            <h4>Stock Chart</h4>

            <div class="k-d-flex k-gap-12 k-pb-2 k-pt-1 k-ps-3 stock-tabs">
                <div class="tab selected">SOLAR FLUX</div>
                <div class="tab">QUANTUM</div>
                <div class="tab">NEOPHARM</div>
                <div class="tab">SOLARIS</div>
                <div class="tab">GLOBEFIN BANK</div>
            </div>



            @(Html.Kendo().StockChart<Financial_App_Core.Models.StockDataPoint>()
                .Name("stockChart")
                .DataSource(ds => ds.Read(read => read.Action("GetStockData", "Chart")))
                .DateField("Date")
                .Panes(panes =>
                {
                    panes.Add().Height(170).Title(t => t.Text("Value").Position("center"));
                    panes.Add("volumePane").Title(t => t.Text("Volume").Position("center"));
                })
                .ChartArea(c => c.Background("transparent"))
                .CategoryAxis(axis => axis.Pane("volumePane"))
                .ValueAxis(axis => axis.Numeric().Line(line => line.Visible(false)))
                .ValueAxis(axis => axis.Numeric("volumeAxis").Pane("volumePane").Visible(false))
                .Series(series =>
                {
                    series.Candlestick(s => s.Open, s => s.High, s => s.Low, s => s.Close).Color("#008478");
                    series.Column(s => s.Volume).Axis("volumeAxis").Tooltip(t => t.Visible(true)).Color("#008478");
                })
                .Navigator(nav => nav.Series(series => series.Area(s => s.Close).Color("#008478")).Select(DateTime.Parse("2019/08/06"), DateTime.Parse("2020/08/07")).CategoryAxis(c => c.Labels(l => l.Rotation(0))))
            )
        </div>
    </div>
</div>
